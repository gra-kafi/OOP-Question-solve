Q1:

    (a)
        class CashPay extends Payment{
            public double getCharge(){
                return 0.0;
            }
        }
        
        class CreditCardPay extends Payment{
            public double getCharge(){
                return amount*0.025;
            }
        }
        
        class CheckPay extends Payment{
            public double getCharge(){
                return 10.0;
            }
        }
        
        abstract class Payment implements Transaction{ 
            public double getTax(){ 
                return amount*0.156;
            } 
        
            @Override 
            public void give(){ 
                amount = amount + getCharge();
                double totalAmount = amount + getTax();
                System.out.println(currency+" "+totalAmount+" is paid"); 
            } 
        }



    (b)
        class Square implements Shape{
            private double side;
        
            Square(double side){
                this.side = side;
            }
            public double getArea(){
                return side*side;
            }
        }
        
        class ShapeTest{
            static void draw(Shape shape){
                System.out.println("drawing over "+shape.getArea()+" area");
            }
        }
    






Q2:


    (a)
            import java.io.BufferedReader;
            import java.io.BufferedWriter;
            import java.io.FileReader;
            import java.io.FileWriter;
            import java.io.IOException;
            
            class Test{
                public static void main(String[] args) {
                    
                    try{
                        BufferedReader br = new BufferedReader(new FileReader("Input.txt"));
                        BufferedWriter bw = new BufferedWriter(new FileWriter("Output.txt"));
            
                        String str;
                        int count = 0;
                        while ((str = br.readLine()) != null) {
                            for (int i = 0; i < str.length(); i++) {
                                char c = str.charAt(i);
                                if ((c >= 'a' && c <= 'z') &&str.charAt(i) != 'a' && str.charAt(i) != 'e' && str.charAt(i) != 'i' && str.charAt(i) != 'o' && str.charAt(i) != 'u' ) {
                                    count++;
                                }
                            }
                        }
            
                        String consonant = String.valueOf(count);
                        bw.write(consonant);
            
                        br.close();
                        bw.close();
                    
                    }catch(IOException ioe){
                        System.out.println(ioe.getMessage());
                    }
            
                }
            }


    (b)
    
        1.
            If an exception is not caught or handled in Java the program will terminate.
        
        2.
            b
            d
            e
            f








Q3:


    
